// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "https://tos.santoshk.dev",
        "contact": {},
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/auth/accessToken/": {
            "post": {
                "tags": [
                    "auth"
                ],
                "summary": "allows a user to get a new access token from your refresh token",
                "parameters": [
                    {
                        "description": "Refresh Token",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.AccessTokenRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.TokenResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/helpers.APIFailure"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/helpers.APIFailure"
                        }
                    }
                }
            }
        },
        "/crm/companies": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "companies"
                ],
                "summary": "creates a company",
                "parameters": [
                    {
                        "description": "company",
                        "name": "company",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.CreateCompany"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/schemas.CompanyItem"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/helpers.APIFailure"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/helpers.APIFailure"
                        }
                    }
                }
            }
        },
        "/crm/companies/": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "companies"
                ],
                "summary": "retrieves the list of companies",
                "parameters": [
                    {
                        "type": "string",
                        "name": "industry",
                        "in": "query"
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "default": 1,
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "default": 10,
                        "name": "page_size",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "search",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/schemas.CompanyListResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/helpers.APIFailure"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/helpers.APIFailure"
                        }
                    }
                }
            }
        },
        "/crm/companies/{company_id}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "companies"
                ],
                "summary": "retrieves a company",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "company id",
                        "name": "company_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.CompanyItem"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/helpers.APIFailure"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/helpers.APIFailure"
                        }
                    }
                }
            },
            "put": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "companies"
                ],
                "summary": "updates a company details",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Company Id",
                        "name": "company_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Company",
                        "name": "company",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.CreateCompany"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.CompanyItem"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/helpers.APIFailure"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/helpers.APIFailure"
                        }
                    }
                }
            },
            "delete": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "companies"
                ],
                "summary": "deletes a company",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Company Id",
                        "name": "company_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/helpers.APIFailure"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/helpers.APIFailure"
                        }
                    }
                }
            }
        },
        "/crm/contacts": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "contacts"
                ],
                "summary": "retrieves the list of contacts",
                "parameters": [
                    {
                        "type": "string",
                        "name": "country",
                        "in": "query"
                    },
                    {
                        "minimum": 18,
                        "type": "integer",
                        "name": "end_age",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "gender",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "collectionFormat": "csv",
                        "name": "owner_ids",
                        "in": "query"
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "default": 1,
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "default": 10,
                        "name": "page_size",
                        "in": "query",
                        "required": true
                    },
                    {
                        "minimum": 18,
                        "type": "integer",
                        "name": "start_age",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "state",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/schemas.ContactResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/helpers.APIFailure"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/helpers.APIFailure"
                        }
                    }
                }
            }
        },
        "/crm/contacts/": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "contacts"
                ],
                "summary": "creates a contact",
                "parameters": [
                    {
                        "description": "contact",
                        "name": "contact",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.CreateContact"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/schemas.ContactResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/helpers.APIFailure"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/helpers.APIFailure"
                        }
                    }
                }
            }
        },
        "/crm/contacts/{contact_id}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "contacts"
                ],
                "summary": "retrieves a contact",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "contact id",
                        "name": "contact_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.ContactResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/helpers.APIFailure"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/helpers.APIFailure"
                        }
                    }
                }
            },
            "put": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "contacts"
                ],
                "summary": "updates a contact",
                "parameters": [
                    {
                        "description": "contact",
                        "name": "contact",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.CreateContact"
                        }
                    },
                    {
                        "type": "integer",
                        "description": "contact id",
                        "name": "contact_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.ContactResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/helpers.APIFailure"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/helpers.APIFailure"
                        }
                    }
                }
            },
            "delete": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "contacts"
                ],
                "summary": "deletes a contact",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "contact id",
                        "name": "contact_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/helpers.APIFailure"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/helpers.APIFailure"
                        }
                    }
                }
            }
        },
        "/crm/leads": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "leads"
                ],
                "summary": "creates a lead",
                "parameters": [
                    {
                        "description": "lead",
                        "name": "lead",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.CreateLead"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.LeadResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/helpers.APIFailure"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/helpers.APIFailure"
                        }
                    }
                }
            }
        },
        "/crm/leads/": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "leads"
                ],
                "summary": "retrieves all lead",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "collectionFormat": "csv",
                        "name": "company_ids",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "collectionFormat": "csv",
                        "name": "contact_ids",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "2006-01-02T15:04:05Z",
                        "name": "end_conversion_date",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "2006-01-02T15:04:05Z",
                        "name": "end_purchase_timeline",
                        "in": "query"
                    },
                    {
                        "minimum": 0,
                        "type": "integer",
                        "default": 0,
                        "name": "interest_level",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "name": "is_deal",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "enum": [
                                "New Lead",
                                " Engaged Lead",
                                " Contacted Lead",
                                " Qualified Lead",
                                " Proposal Sent",
                                " Negotiating",
                                " Pending Contract/Agreement",
                                " Closed - Won",
                                " Closed - Lost",
                                " On Hold",
                                " Re-Engagement"
                            ],
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "nurturing_statuses",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "collectionFormat": "csv",
                        "name": "owner_ids",
                        "in": "query"
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "default": 1,
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "default": 10,
                        "name": "page_size",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "sources",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "2006-01-02T15:04:05Z",
                        "name": "start_conversion_date",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "2006-01-02T15:04:05Z",
                        "description": "filters by purchase time",
                        "name": "start_purchase_timeline",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/schemas.LeadResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/helpers.APIFailure"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/helpers.APIFailure"
                        }
                    }
                }
            }
        },
        "/crm/leads/{lead_id}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "leads"
                ],
                "summary": "retrieves a lead",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "lead",
                        "name": "lead_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.LeadResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/helpers.APIFailure"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/helpers.APIFailure"
                        }
                    }
                }
            },
            "put": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "leads"
                ],
                "summary": "updates a lead",
                "parameters": [
                    {
                        "description": "lead",
                        "name": "lead",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.CreateLead"
                        }
                    },
                    {
                        "type": "integer",
                        "description": "lead id",
                        "name": "lead_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.LeadResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/helpers.APIFailure"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/helpers.APIFailure"
                        }
                    }
                }
            },
            "delete": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "leads"
                ],
                "summary": "deletes a lead",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "lead id",
                        "name": "lead_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/helpers.APIFailure"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/helpers.APIFailure"
                        }
                    }
                }
            }
        },
        "/users/": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "retrieves all users",
                "parameters": [
                    {
                        "minimum": 1,
                        "type": "integer",
                        "default": 1,
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "default": 10,
                        "name": "page_size",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "user_type",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/schemas.UserResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/helpers.APIFailure"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/helpers.APIFailure"
                        }
                    }
                }
            }
        },
        "/users/me": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "retrieves a user",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.UserResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/helpers.APIFailure"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/helpers.APIFailure"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "helpers.APIFailure": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "schemas.AccessTokenRequest": {
            "type": "object",
            "properties": {
                "refreshToken": {
                    "type": "string"
                }
            }
        },
        "schemas.CompanyItem": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "industry": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "size": {
                    "type": "string"
                }
            }
        },
        "schemas.CompanyListResponse": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "results": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/schemas.CompanySchema"
                    }
                }
            }
        },
        "schemas.CompanySchema": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "industry": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "schemas.ContactResponse": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "age": {
                    "type": "integer"
                },
                "city": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "gender": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "owner_id": {
                    "type": "integer"
                },
                "phone_number": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                }
            }
        },
        "schemas.CreateCompany": {
            "type": "object",
            "properties": {
                "industry": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "size": {
                    "type": "string"
                }
            }
        },
        "schemas.CreateContact": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "age": {
                    "type": "integer"
                },
                "city": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "gender": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "owner_id": {
                    "type": "integer"
                },
                "phone_number": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                }
            }
        },
        "schemas.CreateLead": {
            "type": "object",
            "properties": {
                "budget": {
                    "type": "number"
                },
                "budget_currency": {
                    "type": "string",
                    "enum": [
                        "usd",
                        "ngn",
                        "gbp"
                    ]
                },
                "company_id": {
                    "type": "integer",
                    "minimum": 1
                },
                "contact_id": {
                    "type": "integer",
                    "minimum": 1
                },
                "conversion_date": {
                    "type": "string",
                    "default": "2020-01-02T15:04:05Z"
                },
                "description": {
                    "type": "string",
                    "minLength": 3
                },
                "interest_level": {
                    "type": "integer"
                },
                "is_deal": {
                    "type": "boolean",
                    "default": false
                },
                "nurturing_status": {
                    "type": "string",
                    "enum": [
                        "New Lead",
                        " Engaged Lead",
                        " Contacted Lead",
                        " Qualified Lead",
                        " Proposal Sent",
                        " Negotiating",
                        " Pending Contract/Agreement",
                        " Closed - Won",
                        " Closed - Lost",
                        " On Hold",
                        " Re-Engagement"
                    ]
                },
                "purchase_timeline": {
                    "description": "ProductIDs       []uint    ` + "`" + `json:\"product_ids\"` + "`" + `",
                    "type": "string",
                    "default": "2020-01-02T15:04:05Z"
                },
                "source": {
                    "type": "string",
                    "enum": [
                        "Website Form",
                        " Social Media",
                        " Email Campaign",
                        " Referral",
                        " Event",
                        " Cold Call",
                        " Content Marketing",
                        " Advertisement",
                        " Networking",
                        " Trade Show",
                        " Word of Mouth"
                    ]
                },
                "title": {
                    "type": "string",
                    "minLength": 3
                }
            }
        },
        "schemas.LeadResponse": {
            "type": "object",
            "properties": {
                "budget": {
                    "type": "number"
                },
                "budget_currency": {
                    "type": "string"
                },
                "company": {
                    "type": "string"
                },
                "company_id": {
                    "type": "integer"
                },
                "contact": {
                    "type": "string"
                },
                "contact_id": {
                    "type": "integer"
                },
                "conversion_date": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "interest_level": {
                    "type": "integer"
                },
                "is_deal": {
                    "type": "boolean"
                },
                "nurturing_status": {
                    "type": "string"
                },
                "owner": {
                    "type": "string"
                },
                "owner_id": {
                    "type": "integer"
                },
                "purchase_timeline": {
                    "type": "string"
                },
                "source": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "schemas.TokenResponse": {
            "type": "object",
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "refreshToken": {
                    "type": "string"
                }
            }
        },
        "schemas.UserResponse": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                },
                "user_type": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "Bearer": {
            "description": "This is used to authorize the authentication",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    },
    "security": [
        {
            "Bearer": []
        }
    ]
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/api/v1",
	Schemes:          []string{},
	Title:            "Shop Service",
	Description:      "A shop service used to manage sales",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
